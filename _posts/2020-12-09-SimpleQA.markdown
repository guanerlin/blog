---
title: "objc runtime"
date: 2020-12-09 10:29:00 +0800
tags: iOS
categories: programming
layout: post
---

今天尝试了一个Runtime的小demo，从这个sunnyxx里看到的

```
@implementation Son : Father
- (id)init {
    self = [super init];
    if (self) {
        NSLog(@"%@", NSStringFromClass([self class]));
        NSLog(@"%@", NSStringFromClass([super class]));
    }
    return self;
}
@end
```

```
Son
Son
```
原因：因为super是编译器指示符，向super发送消息会被编译成objc_msgSendSuper，但仍以self当做receiver


为了尝试这个代码，我在.m里实现了Son和Father两个类，但是因为随手在一个iOS项目里的ViewController里尝试的，我遇到了一个盲区，既为什么同一个.m文件里定义的类，必须把interface对象生命放到前面，才能被后面使用的类正确使用，即通过编译；
stackoverflow上一个大哥说的很明白，因为编译器只认识他编译过的代码，也即是，是有顺序的，在同一个文件中；那么发散出来，整个编译过程中呢？

2020-12-12补充
在C语言中，main函数之前引用`#include<stdio.h>`，main函数所在文件的函数，可以先声明`void func(int i);`

2020-12-13补充
C语言是静态语言，没有方法实现只有声明的方法，调用该方法，编译时就会报错
Objc是动态语言，运行时才会检查调用方法地址，所以编译是可以过的，运行时报错
用runtime是可以动态hook objc，不改变源码，使用添加代码再运行时hook

fishhook是c语言的hook框架，静态hook(修改源码的）
image在编译器里是模块的意思

**但是在objc中，相同文件的@implementation里的方法却没有这个编译限制，看起来还是编译器在对不同语言做了不同操作，这个问题我弄懂后再来补充**



<br>
### 二.各种iOS中涉及到的发音
说实话，大多数程序员的技术名称发音都很“印度”，包括我自己，所以有时候特别在意一些发音，不想丢人嘿嘿嘿
这里积累下我觉得比较关键的容易发错的

clang c发音abc的c，lang发音language，因为它就是缩写组成的

Mach-O文件 这个我是Macintosh上的out文件，所以是Mac O


<br>
### 三.编译objc源代码，debug
2020-12-14今天下载了objc的源代码，想一边看别人的解释，一边debug看下，因为上周末正好看了一些c语言基础，
	正好巩固下；结果gg了俩小时，下载下来可编译成功的objc工程，就是无法debug，即不走断点。最后在公交站等车时不甘心手机搜索到了这篇博客[调试 iOS 的 objc 运行时，你可能还需要掌握这些知识](https://blog.csdn.net/u011449777/article/details/105521832)，找到解决办法；但是具体原因，还是得继续想想。

解决办法就是在Xcode中，target->Signing&Capabilities->Disable Library Validation勾选，即可调试非个人签名的二进制库了

![示意图](/assets/xcode-runtime-debug.png)

